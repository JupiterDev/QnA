.question
  h1= @question.title
  = render '/subscriptions/subscription', resource: @question
  p= @question.body

  - if @question.files.attached?
    - @question.files.each do |file|
      div id=file.id
        p= link_to file.filename.to_s, url_for(file)
        p= link_to 'Delete file', attachment_path(file), method: :delete, remote: true

  .question_comments
    = render 'comments/comments', resource: @question
  .add_comment
  = render 'comments/form', resource: @question
  
  .vote
    p Vote:
    div class="#{@question.class}-#{@question.id}"
      .rating
        =  "rating: #{@question.rating}"
      - unless current_user&.author_of?(@question)
        .voting
          = link_to 'up', polymorphic_path(@question, action: :vote_up), method: :post, remote: true, data: { type: :json }
          span= ' | '
          = link_to 'down', polymorphic_path(@question, action: :vote_down), method: :post, remote: true, data: { type: :json }
        .re-vote
          = link_to 'cancel your vote', polymorphic_path(@question, action: :cancel_vote),
                                        class: "cancel-vote-link #{'hidden' unless current_user&.already_voted?(@question.id)}", 
                                        method: :delete, remote: true, data: {type: :json}

  - if current_user&.author_of?(@question)
    p= link_to 'Delete question', question_path(@question), method: :delete
    p= link_to 'Edit question', '#', class: 'edit-question-link', data: { question_id: @question.id }
    = form_with model: @question, class: 'hidden', html: { id: "edit-question" } do |f|
      = f.label :title, 'Question title'
      = f.text_area :title
      = f.label :body, 'Question body'
      = f.text_area :body
      = f.label :files
      = f.file_field :files, multiple: true, direct_upload: true
      = f.fields_for :links do |l|
      .links
        = link_to_add_association 'Add link', f, :links, partial: 'questions/link_fields'
      = f.submit 'Save'
